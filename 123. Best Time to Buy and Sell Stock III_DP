public class Solution {
    public int maxProfit(int[] prices) {
        if(prices.length<=1){
            return 0;
        }
        int size=prices.length;
        int[] leftMax=new int[size];
        int[] rightMax=new int[size];
        int lowPrice=prices[0];
        for(int i=1; i<size; i++){
            lowPrice=Math.min(lowPrice, prices[i]);
            leftMax[i]=Math.max(leftMax[i-1], prices[i]-lowPrice);
        }
        int highPrice=prices[size-1];
        for(int i=size-2; i>=0; i--){
            highPrice=Math.max(highPrice, prices[i]);
            rightMax[i]=Math.max(rightMax[i+1], highPrice-prices[i]);
        }
        int maxProfit=0;
        for(int i=0; i<size; i++){
            maxProfit=Math.max(maxProfit, leftMax[i]+rightMax[i]);
        }
        return maxProfit;
    }
}
