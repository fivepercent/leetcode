public class Solution {
    public int largestRectangleArea(int[] heights) {
        if(heights==null||heights.length==0){
            return 0;
        }
        int maxRectangle=0;
        for(int i=0; i<heights.length; i++){
            if(i-1>=0&&heights[i]<heights[i-1]){
                continue;
            }else{
                int area=largestRectangleAreaStartFrom(heights, i);
                maxRectangle=Math.max(maxRectangle, area);
            }
        }
        return maxRectangle;
    }
    public int largestRectangleAreaStartFrom(int[]  heights, int start){
        if(start>=heights.length){
            return 0;
        }
        int maxArea=0;
        int minHeight=Integer.MAX_VALUE;
        for(int i=start; i<heights.length; i++){
            minHeight=Math.min(minHeight, heights[i]);
            int area=minHeight*(i-start+1);
            maxArea=Math.max(maxArea, area);
        }
        return maxArea;
    }
}
