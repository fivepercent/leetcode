/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null){
            return;
        }
        Queue<TreeLinkNode> childrens= new LinkedList<TreeLinkNode>();
        childrens.offer(root);
        childrens.offer(null);
        while(!childrens.isEmpty()){
            TreeLinkNode child = childrens.poll();
            if(child!=null){
                child.next=childrens.peek();
                if(child.left!=null)childrens.offer(child.left);
                if(child.right!=null)childrens.offer(child.right);
                //careful if Queue is already empty.
            }else if(!childrens.isEmpty()){
                childrens.offer(null);
            }
        }
    }
}
