/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null||head.next==null){
            return head;
        }
        ListNode fast = head.next;
        ListNode slow = head;
        while(fast!=null&&fast.next!=null){
            fast=fast.next.next;
            slow=slow.next;
        }
        ListNode half=slow.next;
        slow.next=null;
        ListNode first = sortList(head);
        ListNode second = sortList(half);
        return mergeLists(first, second);
    }
    public ListNode mergeLists(ListNode list1, ListNode list2){
        ListNode dummy = new ListNode(0);
        ListNode node = dummy;
        while(list1!=null&&list2!=null){
            if(list1.val<list2.val){
                node.next=list1;
                list1=list1.next;
            }else{
                node.next=list2;
                list2=list2.next;
            }
            node=node.next;
        }
        if(list1!=null){
            node.next=list1;
        }
        if(list2!=null){
            node.next=list2;
        }
        return dummy.next;
    }
}
