/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null){
            return;
        }
        TreeLinkNode current=root;
        TreeLinkNode leftMost=root;
        while(current!=null){
            if(current.left!=null){
                current.left.next=current.right!=null?current.right:getDiffParentNext(current.next);
            }
            if(current.right!=null){
                current.right.next=getDiffParentNext(current.next);
            }
            if(current.next==null){
                current=getDiffParentNext(leftMost);
                leftMost=current;
            }else{
                current=current.next;
            }
        }
    }
    public TreeLinkNode getDiffParentNext(TreeLinkNode parent){
        TreeLinkNode next=null;
        while(next==null&&parent!=null){
            next=parent.left==null?parent.right:parent.left;
            parent=parent.next;
        }
        return next;
    }
}
