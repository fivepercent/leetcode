/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        if(inorder.length==0||postorder.length==0){
            return null;
        }
        return buildTree(inorder, 0, inorder.length-1, postorder, 0, postorder.length-1);
    }
    public TreeNode buildTree(int[] inorder, int s1, int e1, int[] postorder, int s2, int e2){
        if(s1>e1||s2>e2){
            return null;
        }
        TreeNode root = new TreeNode(postorder[e2]);
        int r=-1;
        for(int i=s1; i<=e1; i++){
            if(inorder[i]==postorder[e2]){
                r=i;
            }
        }
        int rlength= e1-r;
        root.left=buildTree(inorder,s1, r-1, postorder,s2, e2-rlength-1);
        root.right=buildTree(inorder, r+1, e1, postorder, e2-rlength, e2-1);
        return root;
    }
}
