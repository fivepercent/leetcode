public class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        if(triangle==null||triangle.size()==0){
            return 0;
        }
        int lvls=triangle.size();
        int[] mins= new int[triangle.get(lvls-1).size()];
        mins[0]=triangle.get(0).get(0);
        for(int i=1; i<lvls; i++){
            List<Integer> current = triangle.get(i);
            int length=current.size();
            mins[length-1]=current.get(length-1)+mins[length-2];
            for(int j=length-2; j>0; j--){
                mins[j]=Math.min(mins[j-1], mins[j])+current.get(j);
            }
            mins[0]+=current.get(0);
        }
        int minPath=Integer.MAX_VALUE;
        for(int i=0; i<mins.length; i++){
            if(mins[i]<minPath){
                minPath=mins[i];
            }
        }
        return minPath;
    }
}
