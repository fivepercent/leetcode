/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1==null&&l2==null){
            return null;
        }
        int carry=0;
        int digit=0;
        int sum=0;
        ListNode head = null;
        ListNode current = null;
        ListNode previous = null;
        while(l1!=null||l2!=null){
            if(l1==null){
                sum=l2.val+carry;
                l2=l2.next;
            }else if(l2==null){
                sum=l1.val+carry;
                l1=l1.next;
            }else{
                sum=l1.val+l2.val+carry;
                l1=l1.next;
                l2=l2.next;
            }
            carry=sum/10;
            digit=sum%10;
            current= new ListNode(digit);
            if(head==null){
                head=current;
            }
            if(previous!=null){
                previous.next=current;
            }
            previous=current;
            
        }
        if(carry>0){
            previous.next=new ListNode(carry);
            carry=0;
        }
        return head;
    }
}
