public class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<String>();
        if(n<=0){
            return result;
        }
        if(n==1){
            result.add("()");
            return result;
        }
        List<String> previous=generateParenthesis(n-1);
        HashSet<String> table= new HashSet<String>();
        StringBuilder current= new StringBuilder();
        for(String pre:previous){
            if(current.length()!=0){
                current.delete(0, current.length());
            }
            current.append("()");
            current.append(pre);
            table.add(current.toString());
            for(int i=0; i<pre.length();i++){
                if(pre.charAt(i)=='('){
                    current.delete(0, current.length());
                    current.append(pre.substring(0, i+1));
                    current.append("()");
                    current.append(pre.substring(i+1));
                    table.add(current.toString());
                }
            }
        }
        for(String res:table){
            result.add(res);
        }
        return result;
    }
}
